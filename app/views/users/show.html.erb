<% content_for :head do %>
<style>
.chart {
	height: 250px;
}
</style>
<script>

function numberToHumanSize(bytes) {
	var precision = 2;
	var kilobyte = 1024;
	var megabyte = kilobyte * 1024;
	var gigabyte = megabyte * 1024;
	var terabyte = gigabyte * 1024;

	if ((bytes >= kilobyte) && (bytes < megabyte)) {
		return (bytes / kilobyte).toFixed(precision) + ' KB';

	} else if ((bytes >= megabyte) && (bytes < gigabyte)) {
		return (bytes / megabyte).toFixed(precision) + ' MB';

	} else if ((bytes >= gigabyte) && (bytes < terabyte)) {
		return (bytes / gigabyte).toFixed(precision) + ' GB';

	} else if (bytes >= terabyte) {
		return (bytes / terabyte).toFixed(precision) + ' TB';

	} else {
		return bytes + ' B';
	}
}

$(function() {
	Morris.Area({
		element: 'recent-area-chart',
		hideHover: 'auto',
		data: <%=raw @recent_report.result.to_json %>,
		xkey: 'start_at',
		pointSize: 0,
		lineWidth: 1,
		goals: [ 2 * 1024 * 1024 ],
		// xLabels: <%=raw @recent_report.issues.map {|t| I18n.l(t, format: :hhmm) }.to_json %>,
		ykeys: <%=raw @recent_report.remote_ips.to_json %>,
		labels:  <%=raw @recent_report.remote_ips.to_json %>,
		lineColors: <%=raw @recent_report.remote_ip_colors.to_json %>,
		yLabelFormat: function(y) { return numberToHumanSize(y) }
		// hoverCallback: function (index, options) {
		// 	var row = options.data[index];
		// 	console.log(row.c);
		// 	return row.c;
		// }
	});
	
	Morris.Donut({
		element: 'recent-donut-chart',
		data: <%=raw @recent_report.total_chart.to_json %>,
		colors: <%=raw @recent_report.remote_ip_colors.to_json %>,
		formatter: function(y, data) { return numberToHumanSize(y) } 
	});
	
});
</script>
<% end %>
<div class="row-fluid">
	<div class="span5">
		<div class="widget">
			<header><h3>基础信息</h3></header>
			<h4>用户帐号</h4>
			<p><%= @user.email %></p>
			
			<h4>
				可用流量:
				<span class="label label-important"><%= number_to_human_size(@user.transfer_remaining) %></span>
			</h4>
			
			<h4>代理地址:</h4>
			<% if (binding = @user.binding) %>
				<% if binding.port %>
					<p><code><%= whitelist_url(format: :pac, auth_token: @user.authentication_token) %></code></p>
					<p><code><%= blacklist_url(format: :pac, auth_token: @user.authentication_token) %></code></p>
					<p>
						<code><%= "http://#{request.host}:" %><%= @user.binding_port if @user.binding_port %></code>
						<%= link_to "更换端口", [@user, :binding], method: 'post', class: "btn btn-mini", confirm: '确定是否更换端口?' %>
					</p>
				<% else %>
					<p>已经申请, 等待端口分配</p>
				<% end %>
			<% else %>
				<p>
					<%= link_to "申请端口", [@user, :binding], method: 'post', class: "btn" %>
				</p>
			<% end %>
			
			<% if binding && binding.port %>
				<h4>PAC 代理:</h4>
				<p><code><%= whitelist_url(format: :pac, auth_token: @user.authentication_token) %></code></p>
				<p><code><%= blacklist_url(format: :pac, auth_token: @user.authentication_token) %></code></p>
				<p><%= link_to "更换密钥", "#", class: "btn btn-mini" %></p>
			<% end %>
			

		</div>
	</div>
	<div class="span6">
	</div>
</div>

<div class="widget">
	<header><h3>最近2小时用量</h3></header>
	<div class="row-fluid">
		<div class="span9">
			<div id="recent-area-chart" class="chart"></div>
		</div>
		<div class="span3">
			<div id="recent-donut-chart" class="chart"></div>
		</div>
	</div>
</div>

<div class="widget">
	<header><h3>最后使用记录</h3></header>
	<table class="table table-hover table-bordered">
		<% @user.traffics.minutely.desc(:start_at).limit(40).each do |traffic| %>
		<tr>
			<td><%= I18n.l(traffic.start_at, format: :hhmm) %></td>
			<td><code><%= traffic.remote_ip %></code></td>
			<td><%= number_to_human_size(traffic.incoming_bytes) %></td>
			<td><%= number_to_human_size(traffic.outgoing_bytes) %></td>
		</tr>
		<% end %>
	</table>
</div>
